name: Deploy Flask app to Heroku

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: your_database_name
          POSTGRES_USER: your_database_user
          POSTGRES_PASSWORD: your_database_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest flask flask_migrate psycopg2-binary
        if [ -f requirements/base.txt ]; then pip install -r requirements/base.txt; fi
        pip freeze > requirements/base.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Initialize database migrations
      run: |
        flask db init
    - name: Create initial migration
      run: |
        flask db migrate -m "Initial migration."
    - name: Upgrade database
      run: |
        flask db upgrade
    - name: Generate training data
      run: flask create_workouts
    - name: Create test user
      run: flask create_users
    - name: Run tests
      run: |
        pytest
      continue-on-error: true  # Continue even if this step fails

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask flask_migrate psycopg2-binary
        if [ -f requirements/base.txt ]; then pip install -r requirements/base.txt; fi
    - name: Initialize database migrations
      run: |
        flask db init
    - name: Create initial migration
      run: |
        flask db migrate -m "Initial migration."
    - name: Upgrade database
      run: |
        flask db upgrade
    - name: Generate training data
      run: flask create_workouts
    - name: Create test user
      run: flask create_users
    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: your_heroku_app_name
      run: |
        # Install Heroku CLI
        curl https://cli-assets.heroku.com/install.sh | sh
        # Log in to Heroku
        heroku container:login
        # Build and push the Docker image to Heroku
        heroku container:push web -a $HEROKU_APP_NAME
        # Release the Docker image to Heroku
        heroku container:release web -a $HEROKU_APP_NAME
        # Scale the web dyno to 1
        heroku ps:scale web=1 -a $HEROKU_APP_NAME
